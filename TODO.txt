-*- org -*-

* TODO '?debug' mode
  'Dump' and 'Dump transcript' buttons should not be shown unless user has
  specified a '?debug' flag at the end of the URL.
* TODO Add support chat channel and link to it
  Solr has a support IRC chat channel on Freenode. Apparently
  `webchat.freenode.net` can be used to easily access a chat channel (for
  people who aren't that well versed in IRC). Could I set up a freenode chat
  channel for 'teckentranskription' AND add a link to it directly from the
  transcription page?
* TODO Make drag-and-drop help more eye catching
  The drag-and-drop help text is very discreet. It needs to grab the user's
  attention better, maybe a red double (left-right) arrow to explain the
  drag-and-drop aspect of transcript editing. Also explain that a cluster can
  be removed by dragging it out of the transcript.
* TODO Can't add field I/II cluster after drag-and-drop removal         :BUG:
  If one removes the cluster by using one of the buttons everything works as
  expected, but if you remove it by drag-and-drop (by dragging it outside the
  field) a reload is needed for the corresponding add button to work again.

  This is because Dragula removes the cluster DOM element, and fields I and II
  depends on fields being hidden, rather than removed.

  This could be fixed one of the following approaches:

  * Adding the element back (in hidden state) after it has been removed by
    Dragula (by adding something to the removeCluster() function in
    `clustergui.js`). -- How does one add the element back in the correct
    place, though?

  * Changing the architecture so that all cluster DOM element are always
    removed (probably cleaner, since it causes less interaction with Dragula,
    but question is still how to know where to add the elements as they are
    needed).
* TODO Ia cluster margin in GUI                                    :COSMETIC:
  When cluster type 'Ia' is displayed the margin between field I & II is too
  narrow (but when displaying cluster type 'Ib' it looks good).
* TODO Update 'status' field when hovering/focusing on glyph
* TODO Add '/' cluster
* TODO Import/export saved data
* TODO Position of 'contact'/'medial contact' in glyph selector
* TODO Export transcript as SVG (?)                              :FAR_FUTURE:
  Is this possible? Maybe composing an SVG based on the individual glyphs plus
  their relative coordinates taken from the DOM might be possible using some
  Javascript SVG library.
* TODO Infinite undo                                             :FAR_FUTURE:
  NOTE: Need for this feature is somewhat mitigated by the fact that URL
  fragment provides some small undo capability (with the back and forward
  buttons in the browser).

  Instead of OK/cancel requesters. All changes should be automatically written
  to localStorage.

  Idea: Use share URL fragment strings in localStorage, and for each change
  transcript save the new fragment string in a stack. Undos would then just
  become a matter of popping the last fragment string and reverting to the
  previous one.

  Storage module should also listen to localStorage changes, and automatically
  apply these in the GUI (if relevant). Thus making the app work nicely with
  multiple tabs open an the same time.

  Use the undo/redo of typical software, or something more Emacs-y?

  CAVEATS:

  * Listening to localStorage events does not capture events caused by one's
    own tab, therefore these events will have to be created by the storage
    module itself.

  * Pushing to a JSON encoded stack (which would have to be unencoded and then
    reencoded for each push) in localStorage would be inefficient. Therefore
    each item would have to be stored using a new (sequentially named)
    localStorage key. This means we'll prolly want to:

    + Store an index of items. (Or create one in memory to be able to add
      remove stuff from the load <select> list whenever a new transcript is
      added by some tab somewhere. -- scanning through [possibly thousands] of
      localStorage item names might be too inefficient.)

    + Compress and garbage collect old entries as new entries accumulate? If we
      want to retain history forever we could prolly lump older changes
      together and store them in (a possibly compressed version) for longer
      periods.
* TODO Inline SVGs in HTML
  Allows for:
  + Using CSS to control SVG color (yay!) and
  + Fewer requests to fetch the app.

  Concatenate all SVGs into one HTML blob, and inline them in the main HTML in
  a <div style="display:none">.

  The class name of each SVG should be the same as the current file name, then
  use some jQuery magic to extract it and inserting it in the relevant place.
** TODO Tool for extracting/inserting the SVGs into the HTML body
   In order to edit the inlined SVGs one would need a simple script that can
   extract and reinsert the SVGs into the HTML.
* TODO Don't scroll background when scrolling overlay              :COSMETIC:
* TODO "Spellchecker"                                                    :UX:
  Invalid transcriptions should be allowed, but marked as incorrect. (Red
  squiggly underline?)

  Some rules:
    + Contradictory attitude direction ('AR') and attitude twist ('AV') glyphs
      should be marked. (When the attitude direction cannot be the same as, or
      the opposite of, the attitude twist -- as this would be anatomically
      impossible. E.g. if attitude direction is 'up' then attitude twist can be
      neither 'up' nor 'down'.)
* TODO Add textarea for notes to a transcription               :NICE:FEATURE:
  This is for free text notes to a transcription, and should be loaded/saved
  with the transcription. (This would not, at least initially not, be included
  when sharing a transcription -- maybe later this could be added with some
  suitable compression [and URL escaping] or something.)
* TODO Support for multiple browser tabs                               :TEST:
  How well does the transcription work with multiple tabs open in the same
  browser? What happens if you edit the same glyph?
* TODO Test with Explorer                                      :WINDOWS:TEST:
* TODO Test with Safari                                            :MAC:TEST:
* TODO Add dictionary                                               :FEATURE:
  Matching dictionary entries (with their Swedish translation) should be listed
  when writing a transcript. Initially display all words for which the
  currently entered transcript is a subset.(?)
  * Dictionary should display translation + transcript as words are displayed.
  * Dictionary should allow for more than one transcript per word (e.g. because
    many words can be transcribed in different ways: with older and newer
    transcription conventions; and also because some words have different
    realizations/sign language synonyms).
* [0/4] Input shortkeys
** TODO Home/End: Select first/last cluster
   Ctrl+A/Ctrl+E should also work.
** TODO Move IIIc cluster
   Ctrl + ArrowLeft/ArrowRight should move IIIc clusters within the field.

   (We use Ctrl here and reserve Shift + arrow keys for some distant future
   copy/paste feature.)
** TODO Move Ib <-> IIa cluster(?)
   + Ctrl + ArrowRight: Convert Ib -> IIa.
   + Ctrl + ArrowLeft: Convert IIa -> Ib.
** TODO Move focus to next cluster
   ArrowLeft/ArrowRight - Move to 1st glyph(?) of next cluster.

   Awesomest would be if one could retain which glyph number is selected when
   moving. (So that ArrowRight followed by ArrowLeft always leaves you with the
   same glyph focused that was focused to begin with.)
** TODO Change glyph without menu                                        :UI:
   As an alternative to pressing <Enter> then choosing from the glyph selector
   menu user should also be able to just press the desired shortkey directly
   (without displaying a menu).
* [8/10] Make glyph selector prettier                                 :MINOR:
** TODO Prettier shortkey description
   The selection shortkey should be (baseline) aligned. Should take up as
   little space as possible. And be pretty. :)
** TODO Hide shortkey on mobile devices                              :MOBILE:
   A mobile device presumably doesn't have a keyboard. And what use are
   shortkeys without keyboard?
** DONE Vertical alignment of glyphs in glyph selector
   CLOSED: [2017-03-16 Thu 09:53]
** DONE Add menu headings
   CLOSED: [2017-03-15 Wed 10:14]
   'Handform'/'Läge'/'Relation' etc should be menu header (at least one menu
   needs multiple headers, i.e. 'rörelseriktning', 'rörelseart' and
   'interaktionsart') instead of being repeated for each selection choice.
** DONE Browser shortcuts (Ctrl-<key>) should work
   CLOSED: [2017-03-14 Tue 11:24]
   Specifically, it's annoying that one can't search the glyph selector menu
   using the browser 'Find in page...' function (Ctrl-F).
** DONE PgUp/PgDn should work in menu
   CLOSED: [2017-03-14 Tue 11:15]
** DONE Home/End go to beginning/end of menu
   CLOSED: [2017-03-14 Tue 11:15]
** DONE Mouse & keyboard should coexist better
   CLOSED: [2017-02-04 Sat 13:04]
   Implemented by [[Simplify focusing in glyph selector]] in commit caca05e.

   Mouse should use same focusing as keyboard. I.e. instead of having one mouse
   selection (grey background) and one keyboard selection (blue border) there
   should only be one (blue border) which should move if you move the mouse
   pointer, but also be controllable by keyboard.
** DONE IIIa shortkeys
   CLOSED: [2016-12-13 Tue 11:07]
   Added better shortkeys mostly based on glyph shapes.
** DONE Default shortkeys
   CLOSED: [2016-12-13 Tue 11:03]
   All menus should have shortkeys. Use simple 1234567890abc...ABC.. sequence
   when no other shortkeys are defined.
* [1/3] CSS class indicating table cell position in input
** DONE 'high'/'mid'/'low' - For small symbols in high/mid/low position.
   CLOSED: [2016-11-18 Fri 10:51]
** TODO 'text' - For text like symbols (handshape and place of articulation).
** TODO 'full' - For full height table cells.
* [7/9] Fix bad/missing glyphs
** TODO What to do with the (so far) unused glyphs?
   Files matching `pic/**/*Truetrans*.svg`.

   Haven't found much documentation about what these glyphs actually mean, or
   if they're used, but some of them occur in the Swedish Sign Language
   dictionary, and there's very brief descriptions of them in the compendium of
   the sign language typeface.
** TODO "Handform – Krokfingret" should have thicker lines
   Currently this glyph has thinner lines than all the other glyphs. That
   doesn't look nice. :(
** DONE "Läge – Höfterna" is to wide                                :WONTFIX:
   CLOSED: [2016-11-17 Thu 18:42]
   Now works quite well when using proportional glyphs.
** DONE "Läge – Ögat" should be lowered
   CLOSED: [2016-11-04 Fri 01:32]
** DONE Add missing "4-handen" glyph
   CLOSED: [2016-11-01 Tue 01:13]
** DONE Add missing "D-handen" glyph
   CLOSED: [2016-11-01 Tue 01:13]
** DONE Add missing "Y-handen" glyph
   CLOSED: [2016-11-01 Tue 01:13]
** DONE Add missing "Q-handen" glyph
   CLOSED: [2016-11-01 Tue 01:13]
** DONE "Relation – Brevid" should be centered
   CLOSED: [2016-10-27 Thu 10:55]
   pic/Y_Truetrans1.svg
* TODO Refactor makeTranscript()
  If .add() does the insertion currently done by insertCluster() and also
  invokes makeCluster(), makeTranscript() could be made quite a bit cleaner.

  .add() would need to handle clusters of field type III separately (always
  just appending those) from field types I and II (which should replace
  existing) clusters.

  .set() should maybe also use .add()/insertCluster()?
* TODO Fancy/good fix for transcript line breaking                       :UX:
  If the transcript is wider than the screen it should be broken off in the
  same way text is.

  Fancy fix: Field tables should prolly be `display: inline`, and cluster
  tables `display: inline-table`. Some kind of clearfix is prolly also needed
  so that the cluster tables won't protrude outside the inline containers.
* TODO GUI `.cue()` method should use cluster object, not spec
  `.show()` + `.set()` method already does this. -- `.cue()` needs to be done
  before `.hide()` since `.hide()` is called from inside `.cue()`.

  This might be too complicated to be worth it.
* TODO Remove 'load' button                                              :UX:
  Simply selecting a transcript from the list should be enough to load it (if
  user aborts the load, by pressing cancel in the confirmation dialog, then the
  <select> should not change its value.
* TODO History menu should show transcript string
  Apparently second (title) argument of history.pushState() doesn't really work
  (in any browser?) -- is it possible to instead the title with another means
  and have that picked up by the history menu?
* TODO Glyph selector should not wipe future history                     :UX:
  Forward history is wiped out by the glyph selector. E.g. if user changes a
  transcript, then uses the back button (thus creating forward history) then
  just displaying the glyph menu will wipe forward history.

  Could we avoid this by using replaceState(), and aborting the default
  behavior of the back button (using it only to remove the menu) in a reliable
  way?
* TODO Add name + description to sharable URL
  HTML form-y syntax (e.g. '?d=texttexttext') added to the URL fragment.
* TODO Prettier glyphs for IIIb and IIId clusters              :COSMETIC:BUG:
  Left and right arrows for IIIb and IIId should probably be the same as used
  for IIIa? Currently the left and right arrow are the same as for the attitude
  direction symbols (i.e. they're slightly shorter, not looking so pretty next
  to the other articulation arrows).

  Compare with transcription examples given in Bergman & Björkstrand (2015).
* TODO No alert when saving under same name with no changes
* TODO Check that all glyph characters work in all browsers
  '<', '>' and '#' are not allowed in URL fragments, check that they work okay
  in MSIE, Firefox and Chrome, even though they are never URL encoded.

  Should work:

    + ...when entering a URL with URL fragment to load the page.
    + ...during the normal updating of glyphs (adding moving etc.)

  Reference: [[http://stackoverflow.com/questions/2849756/][List of valid characters for the fragment identifier in an URL?]]
  (on Stackoverflow).
* TODO Keep glyph lookup data in ONE place
  All the glyphs lookup data should be kept in one data structure, in one place
  in the code. Currently fieldNameOf, clusterGlyphs, clusterGlyphTypes and
  clusterGlyphNums contain information that should be condensed into one place
  (and possibly processed on loading to produce the final table).

  If any such preprocessing is done, put comments in the code explaining what
  the final lookup table looks like!
* TODO Replace field and cluster names in HTML/CSS
  Roman numeral field names (e.g. 'iii') should be replaced with the new style
  numeric names (e.g. 'field-3'), and the same goes for clusters names (e.g.
  'iiia' should become 'cluster-6').
* TODO Remove 'Load' button
  Selecting a saved transcript in the dropdown should be enough to load it. If
  the current transcript hasn't been saved, and the user cancels the loading,
  the previously loaded transcript should remain selected.
* TODO Error handling in URL fragments
  Invalid glyph letters should be replaced with the character '*', which
  should display a question mark-type sign in the transcript.
* TODO When adding new cluster to transcript use '?' for glyphs          :UX:
  The idea here is to give the user a hint/affordance that they should click
  the glyphs to change them.
* TODO Update references to cluster and field names
  Replace all references to old-style field and cluster names in HTML/CSS/code
  with the new ones.

  Clusters:
      ia   -> cluster-1
      ib   -> cluster-2
      iia  -> cluster-3
      iib  -> cluster-4
      iic  -> cluster-5
      iiia -> cluster-6
      iiib -> cluster-7
      iiic -> cluster-8
      iiid -> cluster-9

  Fields:
      i   -> field-1
      ii  -> field-2
      iii -> field-3
* TODO Specifying an empty URL fragment should clear transcript
  Regardless of whether you remove the '#' sign or not.
* TODO Move cluster structure data into *one* place
  Cluster structure lookup data should all be in one place, and callable from
  there. The following variables (and more?) should go into this place:

    + clusterGlyphTypes
    + clusterGlyphNums
    + glyphData
    + fieldNameOf
    + domElement   (GUI related)
    + glyphImages  (GUI related)
    + glyphImages2 (GUI related)

  Also, there are instances where one wants to parse a string (e.g. to check
  validity) -- it should be possible to do checks of this kind without
  displaying the cluster in the GUI.

  Also look at the `glyphKeys` variable, and the init() function in
  hashchange.js to see if these can be merged with the other lookup tables.
* TODO Add .getElem() method to cluster object
  Instead of using .get('_element').
* TODO Rename `*Type` -> `*Name`(?)
* TODO Rename `data-value` -> `data-chr` in glyph selector
  The name of the data attribute is far to vague as it is now.
* TODO Split `domElement` in two (clusters and fields separately)
  The lookup object `domElements` (in `clustergui.js`) should be split into
  `domClusterElements` and `domFieldElements`.
* [7/8] Change internal data format
  The internal state should use the same format as the URL fragment implemented
  in [['Share' URLs with all transcript information]].
** TODO Keep only one of 'initImages' and 'initImages2'
** DONE Clean up all related FIXMEs in code
   CLOSED: [2017-03-24 Fri 19:00]
** DONE Use `glyphChr` and `startGlyphChr`
   CLOSED: [2017-03-24 Fri 10:15]
   + Rename `glyphStr` -> `glyphChr` throughout.
   + Rename `currentValue` and `defaultGlyphStr` -> `startGlyphChr` (in the
     glyphMenu() and selectGlyph() functions respectively).
** DONE Clean away dead code
   CLOSED: [2017-03-24 Fri 10:00]
   E.g. lookup tables, which are no referenced after the rewrite that changed
   the internal state format.

   (Use `git show b444bb2` and look through removed code to see what variable
   names are candidates for removal.)
** DONE Warning when loading page with no saved data              :MINOR:BUG:
   CLOSED: [2017-03-23 Thu 19:01]
   Loading the page gives warning on console if there is no saved data in local
   storage.
** DONE Check all DONEs in code
   CLOSED: [2017-03-22 Wed 16:16]
** DONE Invalid URL fragment should fail in better way
   CLOSED: [2017-03-21 Tue 10:05]
   + '0' in URL fragment
   + '987654321' incorrectly sorted cluster strings will do weirdness when
     later rearranging clusters in field III
** DONE Rewrite code to use URL fragments internally
   CLOSED: [2017-03-18 Sat 17:28]
* DONE Add medial contact cluster
  CLOSED: [2017-03-17 Fri 11:26]
  Dot with direction of movement above it.

  "Medial contact must be combined with a direction of movement. The direction
  symbol is placed above the symbol for medial contact." [Teckentranskription,
  p.10]
* DONE Glyph selector table row height bug                     :COSMETIC:BUG:
  CLOSED: [2017-03-14 Tue 10:34]
  Table cells for the hand shape images in the glyph selector menu were shorter
  than the other cells, causing ugly appearance.

  This is caused by the `box-sizing: border-box` being applied to <td>, so
  minor rewrite of the CSS so as to not apply it to that (but all other)
  elements.

  Bug was introduced in commit f63116c.
* DONE 'Share' URLs with all transcript information
  CLOSED: [2017-03-13 Mon 10:04]
  Implementation of shareable transcripts URLs. A transcript URL contain a hash
  fragment, and when loading the app with a URL with a fragment the
  corresponding fragment should be loaded.

  This allows users to share their transcripts with other users by sending them
  the URL.

  URL Fragment Format
  -------------------
  Each cluster is prefixed with a 'magic' number (which also works as a
  separator), followed one character per glyph in the cluster. (And, in the
  future, multiple signs will be separated by '/').

  Magic numbers implemented in this change will be 1-8 (9 will probably be used
  for 'medial contact' in the near future) but multiple digit could possibly
  also be used in the future (if there turn out to be a need for it).

  The magic numbers allow glyphs to occur in any order, and in invalid
  positions, this is by design, to keep the maximum possible range and
  combination of symbols open for future expansion.

  Only characters which do not require URL escaping are used, i.e. characters
  matching the following regex: /[a-zA-Z0-9?/:@._~!$&'()*+,;=-]/

  + Cluster separator: Cluster's 'magic' number.
  + Sign separator: '/'

    |------+---+--------+-----+----+----|
    | Type | # | 1      | 2   | 3  | 4  |
    |------+---+--------+-----+----+----|
    | Ia   | 1 | R      | A   |    |    |
    | Ib   | 2 | R      | H   | AR | AV |
    | IIa  | 3 | R      | H   | AR | AV |
    | IIb  | 4 | I      |     |    |    |
    | IIc  | 5 | H      | AR  | AV |    |
    | IIIa | 6 | ARTION |     |    |    |
    | IIIb | 7 | ART    | ION |    |    |
    | IIIc | 8 | H      |     |    |    |
    |------+---+--------+-----+----+----|

    Example: '3fyui5yui6x6X6~' ('fjäril').
* DONE Modified/unmodified detection on load/save
  CLOSED: [2017-03-01 Wed 16:28]
  Keep track of whether the current transcript has been modified since it was
  last loaded, saved or cleared, then warn user that work will be lost before
  they load or clear a modified transcript.
* DONE Fix length of <input> element
  CLOSED: [2017-03-01 Wed 14:29]
  <input> element should have same width as the <select> above it (they already
  have the same set in the CSS).

  Differences in width between <input> and <select> was due to the quirkiness
  of how 'box-sizing' is applied by default, so rather than letting the browser
  decide, I took Paul Irish's advice and applied 'box-sizing: border-box' to
  EVERYTHING. (See "[[https://www.paulirish.com/2012/box-sizing-border-box-ftw/][`* { box-sizing: border-box }` FTW]]" by Paul Irish,
  2012-02-01).
* DONE Glyph selector doesn't work on mobile                  :BUG:MOBILE:UX:
  CLOSED: [2017-02-26 Sun 21:14]
  It seems like one cannot select items below the first screenful on the
  selector (i.e. if one has to scroll down a bit to reach a glyph on the menu
  then that glyph is selectable, but it does not appear in the transcript after
  selecting it).

  Caused by the [[Glyph selector focus fails when invoked by clicking]] issue which
  was solved in commit e34bcaa.
* DONE Glyph selector focus fails when invoked by clicking           :BUG:UX:
  CLOSED: [2017-02-26 Sun 21:14]
  When mouse clicking a glyph to select a new one, the selector failed to focus
  the correct item, due to interference with the .onGlyphHover() event handler.

  The problem was introduced in commit '3f379223' on 2017-02-19.
* DONE Add help about drag-and-dropping
  CLOSED: [2017-02-23 Thu 09:37]
  There should be some hint that one can drag-and-drop clusters.
* DONE Show field borders in GUI during drag-and-drop
  CLOSED: [2017-02-22 Wed 20:45]
* DONE Bottom aligned articulation 'separator'           :MINOR:COSMETIC:BUG:
  CLOSED: [2017-02-22 Wed 20:17]
  The 'Övrigt - Markerar sekventiell artikulation' should be vertically bottom
  aligned with the hand clusters, not top aligned as it is now.
* DONE Fix cluster unfocusing when focusing non-glyph element  :COSMETIC:BUG:
  CLOSED: [2017-02-22 Wed 19:48]
  Currently when clicking outside of the current transcript the current glyph
  is unfocused, but the 'focus' class of the other glyphs in the same cluster
  remains. :(

  Fix this by attach focusing/unfocusing to <body> instead? That way, whenever
  focus changes, we can remove the previous 'focus' class (if any) and add it
  to whatever '.cluster' element can be found above the current target element.
* DONE Show fields borders in GUI whenever a glyph is focused
  CLOSED: [2017-02-22 Wed 19:48]
  The field borders showing which clusters belong to which field should be
  shown whenever a glyph is focused in the GUI, regardless of whether it was
  focused by mouse or keyboard.
* DONE Glyph selector failed sometimes                               :UX:BUG:
  CLOSED: [2017-02-22 Wed 16:09]
  After having removed a cluster, and then created it again the glyph selector
  wouldn't work well for glyphs in the new cluster.
* DONE Firefox: Shortkeys not working in input            :FIREFOX:MINOR:BUG:
  CLOSED: [2017-02-22 Wed 15:34]
  This does not seem to be an issue on Trusty Tahr with Firefox 50.1.0.

  Shortkeys works just fine in the glyph selector, but when a glyph is focused
  and one press enter nothing happens.
* DONE Firefox: Height of empty transcription field        :COSMETIC:FIREFOX:
  CLOSED: [2017-02-22 Wed 15:31]
  [[Make GUI behave when showing cue in empty transcript]] for Firefox.
* DONE Firefox: Button text not black                      :COSMETIC:FIREFOX:
  CLOSED: [2017-02-22 Wed 15:19]
  Not explicitly set in CSS maybe? Fixed by setting 'color: inherit' on
  <button>, <select> and <input>.
* DONE Add links to KTH sign language transcription page              :MINOR:
  CLOSED: [2017-02-22 Web 15:12]
  Link already present in the readme file.

  A link to the page containing the sign language typeface used for
  transcription + the 'Teckentranskription' essay.
* DONE Rename 'cueshow' -> 'cue'                                   :REFACTOR:
  CLOSED: [2017-02-22 Wed 12:03]
  Since 'cuehide' was removed there's no need to distinguish between two
  different cues, so might as well simplify all code + CSS.

  Rename .cueShow() method -> .cue(), and `cueshow` CSS class -> `cue'.
* DONE Allow invalid transcriptions + remove 'cuehide' state
  CLOSED: [2017-02-22 Wed 11:51]
  Simplify GUI by removing a lot off bling, and also allow invalid combinations
  of clusters. (User should be able to enter invalid transcripts, and [in the
  future] have some "spellchecker" nudge them in the direction of good, rather
  than be forced to do good.
* DONE Make GUI behave when showing cue in empty transcript
  CLOSED: [2017-02-21 Tue 18:44]
  The transcript area should not shrink to zero height when empty as this
  causes stuff to flicker around when cues are inserted, causing the button one
  hover over to be pushed down, which causes unhover which causes the cue to
  disappear, which causes the button to move up under the mouse pointer again
  and so the cue appear again...
* DONE It should be possible to remove IIc cluster(?)
  CLOSED: [2017-02-21 Tue 10:16]
  To allow for searching for a word without specifying IIc.
* [10/10] Change GUI update architecture                           :UX:MAJOR:
** DONE Removal of clusters in field I and II
   CLOSED: [2017-02-20 Mon 12:24]
   By dragging and dropping them outside their field.
** DONE Removal of last cluster in field should hide field
   CLOSED: [2017-02-19 Sun 16:25]
** DONE Removal of clusters in field III
   CLOSED: [2017-02-19 Sun 01:10]
   By dragging and dropping them outside their field.
** DONE Reordering of clusters in field III
   CLOSED: [2017-02-19 Sun 01:10]
   By means of drag-and-drop.
** DONE Move cluster image preload into makeClusterGui module
   CLOSED: [2017-02-16 Thu 09:40]
   Together with the 'glyphs' data structure.
** DONE Change glyphs in cluster
   CLOSED: [2017-02-14 Tue 11:04]
** DONE Cluster buttons to add/remove clusters from transcript
   CLOSED: [2017-02-09 Thu 03:20]
** DONE Cluster button hover cues
   CLOSED: [2017-01-31 Mon]
   Hovering on a cluster button should show cues (in the transcript) displaying
   what would be inserted/removed from the transcript when clicking on the
   button. Moving mouse pointer off of the cluster button the cue should remove
   the cues.
** DONE Loading whole transcript
   CLOSED: [2017-01-30 Mon]
   Loading a new transcript (by means of `makeTranscript.set()`) should
   automatically update the GUI.
** DONE New GUI module with .uncue() function
   CLOSED: [2017-01-31 Mon]
* DONE Remove field <-> button group hovering hilite               :COSMETIC:
  CLOSED: [2017-02-19 Sun 15:41]
  Hovering over a field hilites the corresponding button group and vice versa,
  however this has turned out to be more annoying that helpful. Therefore this
  behavior should be removed.
* DONE GUI `.set()` method should use cluster object, not spec
  CLOSED: [2017-01-16 Thu 18:59]
  `.show()` method already does this
* DONE Don't filter data content in storage module
  CLOSED: [2017-02-16 Thu 10:32]
  Cluster module now does filtering, by treating 'hidden' properties
  (properties with names beginning with '_') separately -- not returning any
  hidden properties when `.get()` the whole cluster object.
* DONE Simplify focusing in glyph selector                               :UX:
  CLOSED: [2017-02-04 Sat 13:04]
  Moving the mouse pointer onto a glyph selector item should focus that item
  (using the blue border), and using the arrow up/down should move the same
  focus, instead of the two different focusing mechanisms currently used
  (greying out an item when focused by mouse, and blue border when selecting
  with keyboard).
* DONE Simple/ugly fix for transcript line breaking                      :UX:
  CLOSED: [2016-12-15 Thu 22:09]
  If the transcript is wider than the screen it should be broken off in the
  same way text is.

  Easy/ugly fix: Disable line breaking for fields I and II, and top align text
  inside the field tables. This will mostly look file, but somewhat ugly on
  screens small enough that a transcript should be line broken when there are
  only field I & II clusters present.
* DONE Keyboard shortcuts (shortkeys) for handshape glyph selector
  CLOSED: [2016-12-13 Tue 10:04]
  Pressing an alphabetic key should jump to the glyph most similar i
  appearance = Faster navigation!
* DONE Creating new cluster should focus first glyph in that cluster     :UX:
  CLOSED: [2016-12-12 Mon 08:06]
* DONE Hovering on cluster should hilite corresponding button            :UX:
  CLOSED: [2016-12-12 Mon 07:48]
* DONE Hovering on button should show clusters to add/erase on click     :UX:
  CLOSED: [2016-12-12 Mon 07:14]
  + Glyphs which are to be removed are marked now with diagonal red stripes
    (and slightly grayed out).
  + If a button will add additional clusters then the buttons for those
    clusters are highlighted as well.
* DONE Buttons should show which clusters are currently used             :UI:
  CLOSED: [2016-12-12 Mon 01:43]
* DONE 'AR' glyph should have same placement in Ib and IIa              :BUG:
  CLOSED: [2016-12-11 Sun 23:44]
* DONE Field I should be vertically aligned with field II and III       :BUG:
  CLOSED: [2016-12-11 Sun 23:44]
* DONE IIb input field erroneously gets own border + 'I' label          :BUG:
  CLOSED: [2016-12-11 Sun 23:44]
  If present the IIb cluster erroneously gets its own little 'input field'
  bolder when one hovers over #input, so that there is an 'input field inside
  an input field'. Not good.
* DONE Hovering on input field should hilite button group + vice versa   :UX:
  CLOSED: [2016-12-11 Sun 23:08]
* DONE makeTranscript.set() should be able to deal with bad input       :BUG:
  CLOSED: [2016-12-11 Sun 21:37]
  If input isn't an array (i.e. if localStorage contains valid JSON, which is
  something else than an array, and this get passed to the transcript .set()
  function) then setting the transcript fails.

  It now gives a console.warn() + sets an empty transcript.
* DONE Clusters Ib and IIa + IIb should be mutually exclusive
  CLOSED: [2016-12-11 Sun 17:51]
  Adding Ib now removes IIa + IIb (if existing), and adding IIa or IIa + IIb
  should removes any Ib.
* DONE All cluster add buttons should make sure IIc cluster exists
  CLOSED: [2016-12-11 Sun 17:46]
* DONE Adding I or II cluster at end of transcription should work       :BUG:
  CLOSED: [2016-12-11 Sun 17:25]
* DONE Dump button should work even with bad JSON in localStorage       :BUG:
  CLOSED: [2016-12-11 Sun 17:06]
  Dump button now also uses the internal storage module.
* DONE Clear button should clear everything + add IIc                    :UX:
  CLOSED: [2016-12-10 Sat 17:23]
  IIc should never be removed (as IIc is always required).
* DONE Storage module should be able to cope with stored bad JSON       :BUG:
  CLOSED: [2016-12-10 Sat 17:20]
* DONE Hovering on transcript should show cluster field numbers          :UX:
  CLOSED: [2016-12-09 Fri 18:51]
* DONE Sign transcript should be inside another table
  CLOSED: [2016-12-09 Fri 07:13]
  With one <td> for I, one for II and one for II fields.
* DONE Cleanup terminology in source code
  CLOSED: [2016-12-08 Thu 15:53]
  + 'transcript' = A complete transcript for a single sign.
  + 'field' = There are three possible fields in a transcript: I, II and III
    (though field I and III are optional).
  + 'cluster' (of glyphs) = A collection of glyphs which always go together (in
    the GUI there is a button for each cluster). The clusters are named after
    their field + a letter, e.g. IIa, IIc. The cluster IIc is special in that
    it is required in all transcripts.
  + 'glyph' = One symbol (or squiggle) used.
  + 'image' = Refers to one SVG (or other) image (which usually contains a
    single glyph).
* DONE BUGFIX: Cluster buttons on top of glyph selector
  CLOSED: [2016-11-29 Tue 10:23]
  Fixed this by adding the class 'overlay' to the <body> tag when displaying
  the overlay, and then having a CSS rule hiding the move/delete buttons if the
  overlay class is applied to body.

  The cluster move/delete buttons should now show up on top of the glyph
  selector menu.
* DONE Glyph selector order
  CLOSED: [2016-11-29 Tue 10:13]
  Should reflect the order in 'Teckentranskription' (rather than be in an order
  convenient when stepping through the glyphs one by one, as before).
* DONE Remove '=>' arrow from IIIa list of glyphs
  CLOSED: [2016-11-29 Tue 09:41]
* DONE Glyph selector mobile cancel
  CLOSED: [2016-11-28 Mon 19:04]
  Use page history to allow the 'Back' button to cancel.
* [14/14] Cell phone friendly glyph selector
  Instead of using <- and -> to change glyphs, should press enter (or click) to
  get a dropdown from which one can select a glyph. -- This would also make
  this work on cell phones.
** DONE Current glyph should be highlighted/selected in menu
   CLOSED: [2016-11-28 Mon 10:06]
** DONE Keyboard shortcut to invoke menu
   CLOSED: [2016-11-22 Tue 20:34]
** DONE Modified glyph should focused after changing
   CLOSED: [2016-11-22 Tue 11:34]
** DONE Keyboard shortcuts in menu
   CLOSED: [2016-11-22 Tue 11:31]
   ArrowUp/Down/Enter/Esc to navigate menu
** DONE Reduce size of handshape pictures
   CLOSED: [2016-11-21 Mon 11:58]
** DONE Generate menu from Javascript
** DONE Replace 'H' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'R' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'AR' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'AV' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'ART-ION' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'ART' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'ION' field with menu
   CLOSED: [2016-11-21 Mon 11:51]
** DONE Replace 'A' field with menu
   CLOSED: [2016-11-21 Mon 10:51]
* DONE Link to GitHub README
  CLOSED: [2016-11-27 Sun 21:48]
  Using strapdown.js to produce a nice and readable README?
  -- Naah. Linked to the GitHub version of the README instead.
* DONE Link to GitHub repo
  CLOSED: [2016-11-27 Sun 21:48]
* DONE Link to GitHub issue tracker
  CLOSED: [2016-11-27 Sun 21:48]
* DONE Add license + link to the license
  CLOSED: [2016-11-27 Sun 21:48]
* DONE Glyph selector shouldn't split rows with borders
  CLOSED: [2016-11-22 Tue 20:30]
  When showing the glyph selector on a cell phone, the fact that one selects an
  entire table row is not obvious (one could get the impression that one can
  select table *cells*).

  Should remove the vertical lines (vertical table cell borders) inside the
  table, so at to emphasize that the description on each line is denotes one
  possible glyph (and not several alternatives).
* DONE Cell phone friendly CSS
  CLOSED: [2016-11-22 Tue 19:52]
  Responsive GUI when zooming in on cell phone.
* DONE IIIc should have the arrow inside the button
  CLOSED: [2016-11-18 Fri 10:24]
* DONE Round off CCS pixel to integers
  CLOSED: [2016-11-17 Thu 19:03]
* [6/6] Resize image bounding boxes
  The size of each image should be just enough for the glyph to fit, and then
  each image should be included in the DOM not as background images using CSS,
  but as proper images with the <img> tag -- that way the HTML tables can
  adjust automatically to each glyph's size and we'll get a (much?) prettier
  layout of each transcribed sign.
** DONE Cleanup of code used for old glyphs
   CLOSED: [2016-11-17 Thu 18:41]
** DONE Attitude direction glyphs ('AR')
   CLOSED: [2016-11-15 Tue 18:30]
** DONE Attitude twist glyphs ('AV')
   CLOSED: [2016-11-15 Tue 18:17]
** DONE Place of articulation glyphs ('A')
   CLOSED: [2016-11-15 Tue 11:27]
** DONE Relation glyphs ('R')
   CLOSED: [2016-11-14 Mon 21:55]
** DONE Handshape glyphs ('H')
   CLOSED: [2016-11-14 Mon 21:41]
* DONE Focusing glyph should update status box
  CLOSED: [2016-11-14 Mon 18:07]
  Displaying the information about that glyph.
* DONE Preload all images
  CLOSED: [2016-11-14 Mon 11:31]
  Load them using HTML, rather than ajax, if possible (as it would work on the
  file:// protocol, too). Maybe just a large hidden HTML element will do?
* DONE Focus the a new cluster upon creation
  CLOSED: [2016-11-14 Mon 11:04]
  BUG: Implementation doesn't work when adding prepended type I field, if other
  clusters have already been created. -- It then focuses a glyph in the last
  cluster instead. But what the hell, right?

  When one clicks a button to create a new glyph cluster, that cluster should
  be focused.
* DONE 'Delete' button
  CLOSED: [2016-11-06 Sun 20:17]
  For erasing a saved transcription.
* DONE 'Clear' button
  CLOSED: [2016-11-06 Sun 17:29]
  For clearing the current transcription.
* DONE 'Articulation' should be as high as 'relation'
  CLOSED: [2016-11-04 Fri 19:13]
  All articulations (including separator and repetition) should be higher on
  the line, so as to be clearly distinguishable. In fact the top of these
  should align with the top of 'R' (relation).
* DONE Change CSS unit 'em' -> 'px'
  CLOSED: [2016-11-04 Fri 17:33]
  There are rounding errors causing some ugliness and uneven sizes of stuff.
* DONE I. Add 'Place of articulation' symbols at beginning
  CLOSED: [2016-11-04 Fri 03:40]
  The I type buttons should add their symbol at the beginning of the
  transcript, rather than at the end.
* [7/7] Give glyph SVG files descriptive names
  Instead of the pseudo-random names they inherited from the typefaces.
** DONE Rename 'art-ion' (articulation) glyphs
   CLOSED: [2016-11-04 Fri 01:25]
** DONE Rename 'r' (relation) glyphs
   CLOSED: [2016-11-03 Thu 23:12]
** DONE Rename 'i' (interaction kind) glyphs
   CLOSED: [2016-11-03 Thu 23:00]
** DONE Rename 'av' (attitude twist) glyphs
   CLOSED: [2016-11-03 Thu 22:57]
** DONE Rename 'ar' (attitude direction) glyphs
   CLOSED: [2016-11-03 Thu 22:52]
** DONE Rename 'a' (position) glyphs
   CLOSED: [2016-11-03 Thu 22:33]
** DONE Rename 'h' (handshape) glyphs
   CLOSED: [2016-11-03 Thu 21:07]
* DONE 'Interaction kind' component of IIa should be optional
  CLOSED: [2016-11-03 Thu 11:19]
  Double articulation cluster IIa should have an optional interaction kind.
* DONE Hand position glyphs should rotate clockwards
  CLOSED: [2016-11-03 Thu 20:34]
  'AR' and 'AV' glyphs should be reordered so that they rotate clockwards as
  one steps through them.
* DONE Display optional 'interaction kind' component of IIa better
  CLOSED: [2016-11-03 Thu 12:03]
  It should only take up space in the glyph when it is actually used.
* DONE Remember last saved
  CLOSED: [2016-11-02 Wed 22:33]
  On reload, the transcription loaded before the reload should be the one
  displayed.
* DONE Named saves
  CLOSED: [2016-11-02 Wed 14:44]
  Should allow for saving of multiple transcriptions with different names, so
  that we can transcribe a buncha stuff and see what works.
* DONE Three articulation buttons
  CLOSED: [2016-10-27 Thu 11:39]
  |-----|
  | ART |
  | ION |
  |-----|

  = Two glyphs, one above the other.

  |---------|
  | ART-ION |
  |         |
  |---------|

  = Single glyph, full height.

  and

  |---|
  | : |
  |   |
  |---|

  = Narrower version for 'repeated articulation' and 'marks sequential
  articulation' symbols.
* [3/3] List of signs to which can be added/removed
** DONE Ability to add different type of signs
   CLOSED: [2016-10-25 Tue 20:25]
** DONE Delete sign from global list
   CLOSED: [2016-10-24 Mon 02:54]
** DONE Put global list into object of its own
   CLOSED: [2016-10-21 Fri 18:34]
* [eof]
