/* Copyright 2016 by zrajm. Released under GPLv3 license. */

* {
    margin: 0;
    padding: 0;
}

img { max-height: 175px; }

body {
    padding: .25em 1em;
    font-size: 22px;
    font-family: sans-serif;
}

noscript {
    position: absolute;
    z-index: 1;
    top: 0; left: 0; right: 0;

    text-align: center;
    padding: 1em;
    background: #ff0;
    font: bold 1.25em sans-serif;
    border: .33em dashed #000;
}

.left { text-align: left !important; }
.right { text-align: right !important; }

/* DEBUG: Border for glyph tables. */
/* table, td { outline: 1px solid rgba(0,0,0,.3); } */

#input:hover table.cluster.iiic,
#input:hover td[tabindex] { outline: 1px solid rgba(0, 0, 255, 0.25); }
:focus                    { outline: 4px solid rgba(0, 0, 255, 0.5) !important; }

.FIXME {
    /* background: red; */
}

#status {
    padding: 13px 13px;
    margin: 6px 0 13px 0;
    border: 1px inset #eee;
    background: #eee;
}

.big { font-size: 75px; }

table[border="1"] td { border: none; }
table[border="1"] {
    border-collapse: collapse;
    border: 1px solid black;
    text-align: center;
}

table {
    border-collapse: separate;
    border-spacing: 3px;
}

table.uigroup, table.cluster { display: inline-block; }

/* Button margins & layout. */
button, select, input {
    font-size: inherit;
    margin: 3px;
    padding: 6px 13px;
}
button table .big { font-size: 75px; }
button table {
    display: block;
    border-collapse: collapse;
    line-height: .9;
    font-family: serif;
}

/******************************************************************************/

#input table table { margin: 0 3px; }  /* margin between clusters */
#input table { border-collapse: collapse; }
#input td    { background-size: 100px 100px; }

#input td.ar { position: relative; top: -2px; }

#input td.av,
#input td.text,
#input td.artion_low  { vertical-align: bottom; }
#input td.ar,
#input td.ina,
#input td.top,
#input td.artion_high,
#input td.artion_tall { vertical-align: top;    }

/* SVGs aligned to top should be pushed slightly downwards. */
#input td.ina         img,
#input td.top         img,
#input td.artion_high img,
#input td.artion_tall img { padding-top: 8px; }

/* SVGs aligned to bottom should be pushed 10px upwards. */
#input td.low     { vertical-align: bottom !important; }
#input td.low img {
    padding-bottom: 8px;
    padding-top: 0px !important;
}

#input td.h img                          { padding: 0px 4px; }
#input td img[src="pic/x-separator.svg"] { padding: 0px 6px; }

/* width */
#input td.artion_high               { width: 46px; }
button.ui                           { width: 100px;   }
select#load-input, input#save-input { width: 250px;   }
#input td                           { width: auto;    }

#input td img {
    display: block;
    margin: 0 auto;
}
#input td.artion_low {
    vertical-align: bottom;
    height: 38px;
}

/* height */
/* high, mid, low, text, full = Input table row position. */
#input td.high        { height: 15px; }
#input td.text        { height: 70px; }
#input td.full        { height: 85px; }

/******************************************************************************/

table { position: relative; }
table caption.controls {
    display: none;
    z-index: 1;
    position: absolute;
    right: 0;

    color: rgba(0, 0, 0, .5);
    font-weight: bold;
}
table:hover > caption.controls { display: block; }
body.overlay table:hover caption.controls { display: none; }

#input table td[tabindex]:hover,
#overlay table tr:hover,
table caption.controls             { background: rgba(0, 0, 0, .2); }
table caption.controls span        { border: 3px solid transparent; }
table caption.controls span:hover  { background: rgba(100, 100, 100, .5); }
table caption.controls span:active { background: rgba( 50,  50,  50, .5); }
table caption.controls span[disabled] { background: inherit; color: rgba(0, 0, 0, .2) }

footer {
    opacity: .75;
    font-size: 80%;
    margin: .5em 0;
    font-family: sans-serif;
    text-align: center;
}

/******************************************************************************/

#overlay table { border-collapse: collapse; }
#overlay table td {
    text-align: center;
    height: 70px;
    vertical-align: bottom;
}
#overlay table td + td { vertical-align: middle; }

#overlay {
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    bottom: 10;
    right: 0;
    background: rgba(0, 0, 0, .5);
    display: none;
    text-align: center;
    min-height: 100%;
}

#overlay table {
    display: inline-block;
    background: white;
}
#overlay table td {
    padding: 4px;
}

#overlay table td { border: none; }
#overlay table tr { border: 1px solid black; }

#overlay table td + td img {
    height: 100%;
    display: block;
    margin: auto;
}
#input .field.hover:before,
#input .field:hover:before,
table.uigroup.buttons.hover,
table.uigroup.buttons:hover { background: rgba(0, 0, 255, 0.25); }

#overlay table tr.selected {
    /* Same color as the :focus outline, but twice as transparent. */
    background: rgba(0, 0, 255, 0.25);
}

/******************************************************************************/

/* Hide empty transcription fields. */
#input .field:empty { display: none; }

/* Padding between transcription fields. */
#input .field            { border-right: .25em solid transparent; }
#input .field:last-child { border-right: 0; } /* after last field */

/* Make linebreaking behave somewhat. */
#input .field.i, #input .field.ii {
    vertical-align: top;
    white-space: nowrap;
}

/* Show transcription field labels when hovering on #input. */
#input .field { position: relative; }
#input .field.i:before { content: "I"; }
#input .field.ii:before { content: "II"; }
#input .field.iii:before { content: "III"; }
#input .field:before {
    display: none;
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    margin: -1.1em -2px -2px -2px;
    color:            rgba(0, 0, 0, .4);
    border: 1px solid rgba(0, 0, 0, .4);
    text-align: center;
    line-height: 1em;
}
#input > table { margin-top: 1.1em; } /* compensate for negative margin-top */
#input.hover .field:before, #input:hover .field:before { display: block; }

/******************************************************************************/

/* Button selection colors. */
button, select {
    background: #aaa;
    border: none;
    border-radius: 2px;
    position: relative;
}

button.hover, button:hover {
    box-shadow: insert 0 0 8px #fff;
}

button:before {
    display: block;
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    content: '';
    border-radius: 2px;
    background: transparent;
    box-shadow: none;
}

button:not([disabled]).hover:before,
button:not([disabled]):hover:before {
    display: block;
    border: 1px solid #000;
    background: rgba(0, 0, 0, .2);
    box-shadow: 0 5px 5px rgba(0, 0, 0, .3);
}

button:not([disabled]).active:before,
button:not([disabled]):active:before {
    display: block;
    background: rgba(0, 0, 0, .2);
    box-shadow: inset 0 5px 30px 5px rgba(0, 0, 0, .2);
}

button:not([disabled]).active:hover:before,
button:not([disabled]).active.hover:before {
    background: rgba(0, 0, 0, .35);
    box-shadow:       0 5px 5px      rgba(0, 0, 0, .3),
                inset 0 5px 30px 5px rgba(0, 0, 0, .3);
}

.shortkey {
    font-size: smaller;
    color: black;
    opacity: .4;
}
[disabled], .disabled {
    color: black;
    opacity: .5;
}

.cluster.disabled {
    opacity: .75;
    border-radius: 2px;
    background: repeating-linear-gradient(
        -45deg,
        rgba(255, 0, 0, .75),
        rgba(255, 0, 0, .75) 5px,
        transparent 5px,
        transparent 10px
    );
}

button.hilite:before {
    border: 1px solid #000;
    background: rgba(0, 0, 255, 0.3) !important;
}

/*[eof]*/
