/* Copyright 2016-2017 by zrajm. Released under GPLv3 license. */

* {
    margin: 0;
    padding: 0;
}

img { max-height: 175px; }

body {
    padding: .25em 1em;
    font-size: 22px;
    font-family: sans-serif;
}

noscript {
    position: absolute;
    z-index: 1;
    top: 0; left: 0; right: 0;

    text-align: center;
    padding: 1em;
    background: #ff0;
    font: bold 1.25em sans-serif;
    border: .33em dashed #000;
}

.hide { display: none !important; }
.left { text-align: left !important; }
.right { text-align: right !important; }

/* DEBUG: Border for glyph tables. */
/* table, td { outline: 1px solid rgba(0,0,0,.3); } */

.cluster.focus        { outline: 1px dashed rgba(0, 0, 255, 0.25); }
.cluster.focus .glyph { outline: 1px solid rgba(0, 0, 255, 0.25); }
:focus                { outline: 4px solid rgba(0, 0, 255, 0.5) !important; }

.FIXME {
    /* background: red; */
}

#status {
    padding: 13px 13px;
    margin: 6px 0 13px 0;
    border: 1px inset #eee;
    background: #eee;
}

.big { font-size: 75px; }

table[border="1"] td { border: none; }
table[border="1"] {
    border-collapse: collapse;
    border: 1px solid black;
    text-align: center;
}

table {
    position: relative;
    border-collapse: separate;
    border-spacing: 3px;
}

table.uigroup, table.cluster { display: inline-block; }

/* Button margins & layout. */
button, select, input {
    color: inherit;
    font-size: inherit;
    margin: 3px;
    padding: 6px 13px;
}
button table .big { font-size: 75px; }
button table {
    display: block;
    border-collapse: collapse;
    line-height: .9;
    font-family: serif;
}

/******************************************************************************/

#input table table { margin: 0 3px; }  /* margin between clusters */
#input table { border-collapse: collapse; }
#input td    { background-size: 100px 100px; }

.glyph.ar { position: relative; top: -2px; }

.glyph.av,
.glyph.text,
.glyph.artion_low  { vertical-align: bottom; }
.glyph.ar,
.glyph.ina,
.cluster .top,
.glyph.artion_high,
.glyph.artion_tall { vertical-align: top;    }

/* SVGs aligned to top should be pushed slightly downwards. */
.glyph.ina         img,
.glyph.top         img,
.glyph.artion_high img,
.glyph.artion_tall img { padding-top: 8px; }

/* SVGs aligned to bottom should be pushed 10px upwards. */
.glyph.low     { vertical-align: bottom !important; }
.glyph.low img {
    padding-bottom: 8px;
    padding-top: 0px !important;
}

.glyph.h img                          { padding: 0px 4px; }
.glyph img[src="pic/x-separator.svg"] { padding: 0px 6px; }

/* width */
.glyph.artion_high               { width: 46px; }
button.ui                           { width: 100px;   }
button.ui#this,
select#load-input, input#save-input { width: 250px;   }
#input td                           { width: auto;    }

.glyph img {
    display: block;
    margin: 0 auto;
}
.glyph.artion_low {
    vertical-align: bottom;
    height: 38px;
}

/* height */
/* high, mid, low, text, full = Input table row position. */
.cluster .high        { height: 15px; }
.cluster .text        { height: 70px; }
.cluster .full        { height: 85px; }

/******************************************************************************/

footer {
    opacity: .75;
    font-size: 80%;
    margin: .5em 0;
    font-family: sans-serif;
    text-align: center;
}

/******************************************************************************/

#overlay table { border-collapse: collapse; }
#overlay table td {
    text-align: center;
    height: 70px;
    vertical-align: bottom;
}
#overlay table td + td { vertical-align: middle; }

#overlay {
    overflow: hidden;
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    padding-top: 4px;
    background: rgba(0, 0, 0, .5);
    display: none;
    text-align: center;
    min-height: 100%;
}

#overlay table {
    display: inline-block;
    background: white;
}
#overlay table td {
    padding: 4px;
}

#overlay table td { border: none; }
#overlay table tr { border: 1px solid black; }

#overlay table td + td img {
    height: 100%;
    display: block;
    margin: auto;
}

#overlay table tr.selected {
    /* Same color as the :focus outline, but twice as transparent. */
    background: rgba(0, 0, 255, 0.25);
}

/******************************************************************************/

/* Input field should always have a height, otherwise GUI elements jump around
   when showing cues and transcript is empty. */
.sign .fieldvspace { height: 91px; }

/* Hide empty transcription fields. */
.sign .field:empty { display: none; }

/* Padding between transcription fields. */
.sign .field            { border-right: .25em solid transparent; }
.sign .field:last-child { border-right: 0; } /* after last field */

/* Make linebreaking behave somewhat. */
.sign .field.i, .sign .field.ii {
    vertical-align: top;
    white-space: nowrap;
}

/* Show transcription field labels when hovering on '.sign'. */
.sign .field { position: relative; }
.sign .field.i:before { content: "I"; }
.sign .field.ii:before { content: "II"; }
.sign .field.iii:before { content: "III"; }
.sign .field:before {
    display: none;
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    margin: -1.1em -2px -2px -2px;
    color:            rgba(0, 0, 0, .4);
    border: 1px solid rgba(0, 0, 0, .4);
    text-align: center;
    line-height: 1em;
}
table.sign { margin-top: 1.1em; } /* compensate for negative margin-top */
.sign.focus .field:before { display: block; }

/******************************************************************************/

/* Button selection colors. */
button, select {
    background: #aaa;
    border: none;
    border-radius: 2px;
    position: relative;
}

button.hover, button:hover {
    box-shadow: insert 0 0 8px #fff;
}

button:before {
    display: block;
    position: absolute;
    top: 0; left: 0; bottom: 0; right: 0;
    content: '';
    border-radius: 2px;
    background: transparent;
    box-shadow: none;
}

button:not([disabled]).hover:before,
button:not([disabled]):hover:before {
    display: block;
    border: 1px solid #000;
    background: rgba(0, 0, 0, .2);
    box-shadow: 0 5px 5px rgba(0, 0, 0, .3);
}

button:not([disabled]).active:before,
button:not([disabled]):active:before {
    display: block;
    background: rgba(0, 0, 0, .2);
    box-shadow: inset 0 5px 30px 5px rgba(0, 0, 0, .2);
}

button:not([disabled]).active:hover:before,
button:not([disabled]).active.hover:before {
    background: rgba(0, 0, 0, .35);
    box-shadow:       0 5px 5px      rgba(0, 0, 0, .3),
                inset 0 5px 30px 5px rgba(0, 0, 0, .3);
}

.shortkey {
    font-size: smaller;
    color: black;
    opacity: .4;
}
[disabled], .disabled {
    color: black;
    opacity: .5;
}

.cluster.disabled {
    opacity: .75;
    border-radius: 2px;
    background: repeating-linear-gradient(
        -45deg,
        rgba(255, 0, 0, .75),
        rgba(255, 0, 0, .75) 5px,
        transparent 5px,
        transparent 10px
    );
}

button.hilite:before {
    border: 1px solid #000;
    background: rgba(0, 0, 255, 0.3) !important;
}

.cluster.cue {
    opacity: .5;
}

/*[eof]*/
